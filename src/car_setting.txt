## Default settings for the simulation### Scenario settingsScenario.name =  CarSetting-%%Group.router%%-[Scenario endTime = %%Scenario.endTime%%]-[Message Interval = %%Events1.interval%%]-[message size = %%Events1.size%%]-[Buffer Size = %%Group.bufferSize%%]-[TTL = %%Group.msgTtl%%]Scenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12h#Scenario.endTime = 43200#Scenario.endTime = 21600Scenario.endTime = 18000## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 300# Define 6 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.movementModel = RandomWaypoint#Group.router = RapidRouter#Group.router = EpidemicRouter#Group.router = ProphetRouter#Group.router = RapidWithKnapsackRouterGroup.router = RapidKnapsackDropRouter#Group.router = DecisionEngineRouter#DecisionEngineRouter.decisionEngine = ProphetDecisionEngine#Group.bufferSize = 10M#Group.bufferSize = 5M#Group.bufferSize = 50kGroup.bufferSize = 20kGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# group1 (car) specific settingsGroup1.groupID = C# cars can drive only on roadsGroup1.okMaps = 1# 10-50 km/hGroup1.speed = 2.7, 13.9# Message TTL of 300 minutes (5 hours)#Group.msgTtl = 300Group.msgTtl = 150Group.nrofHosts = 100## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35#Events1.interval = 45,55#Events1.interval = 15,25#Events1.interval = 5,15# Message sizes (500kB - 1MB)#Events1.size = 5k, 10k#Events1.size = 500k, 1M#Events1.size = 0.002k, 0.005kEvents1.size = 1k, 2k# range of message source/destination addressesEvents1.hosts = 0,99# Message ID prefixEvents1.prefix = M## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 5# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)#Report.reportDir = reports/test_car/epidemic/test/#Report.reportDir = reports/test_car/prophet/test/#Report.reportDir = reports/test_car/rapid/test/#Report.reportDir = reports/test_car/rapidKnapsack/testActive/#Report.reportDir = reports/test_car/rapidKnapsack/test/#Report.reportDir = reports/test_car/rapidKnapsackDrop/test/#Report.reportDir = reports/test_car/rapidKnapsackDrop/testSendDropFix/Report.reportDir = reports/test_car/rapidKnapsackDrop/testSendDropFix1/#Report.reportDir = reports/test_car/rapid/testSendDrop/#Report.reportDir = reports/test_car/KnapsackDrop/testDrop/# Report classes to loadReport.report1 = MessageStatsReportReport.report2 = FreeBufferDalamNodeReportReport.report3 = LatencyPerContactReportReport.report4 = MessageDeliveredPerContactReportReport.report5 = PercentageMessageDeliveredPerContactReportReport.ToNodeID = [0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20;21;22;23;24;25;26;27;28;29;30;31;32;33;34;35;36;37;38;39;40;41;42;43;44;45;46;47;48;49;50;51;52;53;54;55;56;57;58;59;60;61;62;63;64;65;66;67;68;69;70;71;72;73;74;75;76;77;78;79;80;81;82;83;84;85;86;87;88;89;90;91;92;93;94;95;96;97;98;99]## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 6SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$